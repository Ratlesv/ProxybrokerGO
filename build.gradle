plugins {
    id 'java'
    id 'application'
    // plugin to generate fat jar with all required java libraries
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    // plugin to provide which dependencies have updates
    // adds dependencyUpdates task
    id 'com.github.ben-manes.versions' version '0.39.0'
    // plugin provides building executable and running application natively without compilation
    // add nativeBuild and nativeRun tasks
    id'org.graalvm.buildtools.native' version '0.9.5'
}

sourceCompatibility = '11'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // https://stackoverflow.com/a/65731572
    implementation ('info.picocli:picocli-spring-boot-starter:4.6.1'){
        exclude group: 'ch.qos.logback', module: 'logback-classic'
        exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
    }
    implementation 'com.google.code.gson:gson:2.8.8'
    implementation 'com.maxmind.geoip2:geoip2:2.15.0'
    implementation 'com.graphql-java:graphql-java:230521-nf-execution'
    implementation 'org.apache.logging.log4j:log4j-core:2.14.1'
    // GraalVM Configurations generated under BOOT-INF\classes\META-INF\native-image\picocli-generated
    annotationProcessor  'info.picocli:picocli-codegen:4.6.1'
    testImplementation 'junit:junit:4.13.2'
}

application {
    // Define the main class for the application.
    mainClass = 'com.ziloka.ProxyBroker.ProxyBroker'
}

graalvmNative.binaries.main {
    imageName = "ProxyChecker"
    mainClass = "com.ziloka.ProxyBroker.ProxyBroker"
//    verbose = true
//    fallback = false
}